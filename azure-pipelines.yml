trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/NCF.sln'
  templateBuild: '**/NCF.Template.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

# 缓存 Aspire Workload
- task: Cache@2
  inputs:
    key: 'aspire-workload | "$(Agent.OS)"'  # 根据操作系统缓存 Aspire Workload
    path: '~/.dotnet'  # 缓存 .NET SDK 及其 workload
    restoreKeys: 'aspire-workload'
  displayName: 'Cache Aspire Workload'

# 仅在缓存未命中时安装 Aspire Workload
- script: |
    dotnet workload list | findstr /C:"aspire" || dotnet workload install aspire
  displayName: 'Check & Install Aspire Workload'
  condition: ne(variables['CACHE_RESTORED'], 'true')

- task: NuGetToolInstaller@1
  displayName: 'Use NuGet 6.3.0'
  inputs:
    versionSpec: '6.3.0'
    checkLatest: true

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(templateBuild)'

- task: VSBuild@1
  inputs:
    solution: '$(templateBuild)'
    msbuildArgs: ''
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  displayName: Senparc.Ncf.Template
  inputs:
    command: push
    packagesToPush: '**/Senparc.NCF.Template.*.nupkg'
    nuGetFeedType: external
    publishFeedCredentials: 'nuget-jeffrey-full-key'
  continueOnError: true
  condition: succeededOrFailed()

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'sample'
